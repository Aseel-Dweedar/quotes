/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package quotes;

import com.google.common.reflect.TypeToken;
import com.google.gson.Gson;
import java.io.*;
import java.lang.reflect.Type;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.List;

public class App {
    public static void main(String[] args){
        String path = "./app/src/main/resources/recentquotes.json";
        String apiUrl = "http://api.forismatic.com/api/1.0/?method=getQuote&format=json&lang=en";
//        getQuote(path);
        apiQuotes(apiUrl);
    }

    public static String apiQuotes(String  apiUrl){
            StringBuilder createdLine = new StringBuilder();
        try {
            URL url = new URL(apiUrl);
            HttpURLConnection connect = (HttpURLConnection) url.openConnection();
            connect.setRequestMethod("GET");
            connect.setRequestProperty("User-Agent", "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.95 Safari/537.11");
            int status = connect.getResponseCode();
            if(status == 200){
                InputStream input = connect.getInputStream();
                InputStreamReader reader = new InputStreamReader(input);
                BufferedReader bufferedReader = new BufferedReader(reader);
                String line = bufferedReader.readLine();
                createdLine = new StringBuilder(line);
                while(line != null){
                    System.out.println(line);
                    line = bufferedReader.readLine();
                    if (line != null) {
                        createdLine.append(line);
                    }
                }
                bufferedReader.close();
                FileWriter fileToWrite = new FileWriter("addQuote.json");
                fileToWrite.write(createdLine.toString());
                fileToWrite.close();
            } else{
                System.out.println("An error occurred with status "+status);
                getQuote("./app/src/main/resources/recentquotes.json");
            }
            connect.disconnect();
        } catch (IOException e) {
            e.printStackTrace();
        }
        return createdLine.toString();
    }

    public static List<Quotes> getQuote(String path) {
        Gson gson = new Gson();
        FileReader fileReader = null;
        try {
            fileReader = new FileReader(path);
        } catch (FileNotFoundException e) {
            e.printStackTrace();
            System.out.println("Error");
        }
        Type quoteType = new TypeToken<List<Quotes>>(){}.getType();
        List<Quotes> allQuotes = gson.fromJson(fileReader, quoteType);
        int random = (int)(Math.random() * allQuotes.size());
        System.out.println(allQuotes.get(random).toString());

        return allQuotes;
    }
}
